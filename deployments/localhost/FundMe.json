{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundMe",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb2a08a4f1aa8ca4d1b3662d37e6d2eb1eeca002f2cdce57e768b06b7b7f01e80",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "883844",
    "logsBloom": "0x
    "blockHash": "0x065f62ee0030e4d5287f5e9ee7d44ad4ae466216bed508535feeb63d0387f310",
    "transactionHash": "0xb2a08a4f1aa8ca4d1b3662d37e6d2eb1eeca002f2cdce57e768b06b7b7f01e80",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "883844",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "ad93b7374d06df0053ff0bff03188922",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundMe\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fundme.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/Fundme.sol\":{\"content\":\"// fund the user\\r\\n//withdraw the funded money\\r\\n//set a minimum funding value\\r\\n\\r\\n//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n//import \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\n    \\r\\ncontract FundMe {\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    uint256 public minimumUSD = 50*1e18;\\r\\n    address[] public funders;\\r\\n    mapping(address => uint256) public addressToAmountFunded;\\r\\n\\r\\n    address public owner;\\r\\n    AggregatorV3Interface public priceFeed;\\r\\n\\r\\n    constructor(address priceFeedAddress){\\r\\n    owner = msg.sender;\\r\\n    priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n//payable function is like wallet which store the eth\\r\\n    function fundMe() public payable{\\r\\n        //setting up to send minimum eth\\r\\n        require(msg.value.getConversionRate(priceFeed) >= minimumUSD, \\\"please pay more than 1 eth\\\");\\r\\n        funders.push(msg.sender);\\r\\n        addressToAmountFunded[msg.sender] = msg.value;\\r\\n    }\\r\\n\\r\\n//withdraw the ether\\r\\n    function withdraw() public onlyOwner {\\r\\n\\r\\n        for(uint256 funderIndex =0; funderIndex<funders.length;funderIndex++ ){\\r\\n            address funder = funders[funderIndex];\\r\\n            addressToAmountFunded[funder]=0;\\r\\n        }\\r\\n    //reset the array\\r\\n        funders = new address[](0);\\r\\n        (bool callSuccess,) = payable(msg.sender).call{value:address(this).balance}(\\\"\\\");\\r\\n        require(callSuccess,\\\"call Failed\\\");\\r\\n    }\\r\\n\\r\\n//modifier will tell to execute modiefier code then execute rest of the code or vice versa\\r\\n    modifier onlyOwner{\\r\\n    require(msg.sender == owner, \\\"Only owner can withdraw the money!\\\");\\r\\n    _;\\r\\n    }    \\r\\n\\r\\n    \\r\\n}\",\"keccak256\":\"0xeac1624541f64dd83419f34c476a8628961c44d35f41bba6cb237948650c7318\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter{\\r\\n\\r\\n    // function getVersion(AggregatorV3Interface priceFeed) internal view returns (uint256){\\r\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\r\\n    //     return priceFeed.version();\\r\\n    // }\\r\\n\\r\\n\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256){\\r\\n\\r\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\r\\n\\r\\n        (,int256 price,,,) = priceFeed.latestRoundData();\\r\\n\\r\\n        //ETH IN TERM OF USD\\r\\n        return uint256(price*1e10);\\r\\n    }\\r\\n\\r\\n\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint256){\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount)/1e18;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0x731f693f195eb1adadf0cc550fb0efd52237a19b38a8810aaeaa2955a07731db\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526802b5e3af16b188000060005534801561001d57600080fd5b50604051610f31380380610f31833981810160405281019061003f919061012a565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610157565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f7826100cc565b9050919050565b610107816100ec565b811461011257600080fd5b50565b600081519050610124816100fe565b92915050565b6000602082840312156101405761013f6100c7565b5b600061014e84828501610115565b91505092915050565b610dcb806101666000396000f3fe6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f45780638da5cb5b1461011f578063b6a324e01461014a578063dc0d3dff1461015457610070565b80633430a88c146100755780633ccfd60b146100a05780633e47d6f3146100b7575b600080fd5b34801561008157600080fd5b5061008a610191565b6040516100979190610735565b60405180910390f35b3480156100ac57600080fd5b506100b5610197565b005b3480156100c357600080fd5b506100de60048036038101906100d991906107b3565b6103e3565b6040516100eb9190610735565b60405180910390f35b34801561010057600080fd5b506101096103fb565b604051610116919061083f565b60405180910390f35b34801561012b57600080fd5b50610134610421565b6040516101419190610869565b60405180910390f35b610152610447565b005b34801561016057600080fd5b5061017b600480360381019061017691906108b0565b610569565b6040516101889190610869565b60405180910390f35b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610960565b60405180910390fd5b60005b6001805490508110156102d35760006001828154811061024d5761024c610980565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102cb906109de565b91505061022a565b50600067ffffffffffffffff8111156102ef576102ee610a26565b5b60405190808252806020026020018201604052801561031d5781602001602082028036833780820191505090505b5060019080519060200190610333929190610675565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161035a90610a86565b60006040518083038185875af1925050503d8060008114610397576040519150601f19603f3d011682016040523d82523d6000602084013e61039c565b606091505b50509050806103e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d790610ae7565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005461047f600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105a890919063ffffffff16565b10156104c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b790610b53565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6001818154811061057957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105b4836105e4565b90506000670de0b6b3a764000085836105cd9190610b73565b6105d79190610be4565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610632573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106569190610ca2565b5050509150506402540be4008161066d9190610d1d565b915050919050565b8280548282559060005260206000209081019282156106ee579160200282015b828111156106ed5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610695565b5b5090506106fb91906106ff565b5090565b5b80821115610718576000816000905550600101610700565b5090565b6000819050919050565b61072f8161071c565b82525050565b600060208201905061074a6000830184610726565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078082610755565b9050919050565b61079081610775565b811461079b57600080fd5b50565b6000813590506107ad81610787565b92915050565b6000602082840312156107c9576107c8610750565b5b60006107d78482850161079e565b91505092915050565b6000819050919050565b60006108056108006107fb84610755565b6107e0565b610755565b9050919050565b6000610817826107ea565b9050919050565b60006108298261080c565b9050919050565b6108398161081e565b82525050565b60006020820190506108546000830184610830565b92915050565b61086381610775565b82525050565b600060208201905061087e600083018461085a565b92915050565b61088d8161071c565b811461089857600080fd5b50565b6000813590506108aa81610884565b92915050565b6000602082840312156108c6576108c5610750565b5b60006108d48482850161089b565b91505092915050565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e20776974686472617720746865206d6f6e6560008201527f7921000000000000000000000000000000000000000000000000000000000000602082015250565b600061094a6022836108dd565b9150610955826108ee565b604082019050919050565b600060208201905081810360008301526109798161093d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109e98261071c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a1b57610a1a6109af565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a70600083610a55565b9150610a7b82610a60565b600082019050919050565b6000610a9182610a63565b9150819050919050565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610ad1600b836108dd565b9150610adc82610a9b565b602082019050919050565b60006020820190508181036000830152610b0081610ac4565b9050919050565b7f706c6561736520706179206d6f7265207468616e203120657468000000000000600082015250565b6000610b3d601a836108dd565b9150610b4882610b07565b602082019050919050565b60006020820190508181036000830152610b6c81610b30565b9050919050565b6000610b7e8261071c565b9150610b898361071c565b9250828202610b978161071c565b91508282048414831517610bae57610bad6109af565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bef8261071c565b9150610bfa8361071c565b925082610c0a57610c09610bb5565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3481610c15565b8114610c3f57600080fd5b50565b600081519050610c5181610c2b565b92915050565b6000819050919050565b610c6a81610c57565b8114610c7557600080fd5b50565b600081519050610c8781610c61565b92915050565b600081519050610c9c81610884565b92915050565b600080600080600060a08688031215610cbe57610cbd610750565b5b6000610ccc88828901610c42565b9550506020610cdd88828901610c78565b9450506040610cee88828901610c8d565b9350506060610cff88828901610c8d565b9250506080610d1088828901610c42565b9150509295509295909350565b6000610d2882610c57565b9150610d3383610c57565b9250828202610d4181610c57565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d7957610d786109af565b5b8282058414831517610d8e57610d8d6109af565b5b509291505056fea264697066735822122008841eccaab0f13179e2cc4cd4ba386a431fce1c563d429701a9ee41005347e064736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f45780638da5cb5b1461011f578063b6a324e01461014a578063dc0d3dff1461015457610070565b80633430a88c146100755780633ccfd60b146100a05780633e47d6f3146100b7575b600080fd5b34801561008157600080fd5b5061008a610191565b6040516100979190610735565b60405180910390f35b3480156100ac57600080fd5b506100b5610197565b005b3480156100c357600080fd5b506100de60048036038101906100d991906107b3565b6103e3565b6040516100eb9190610735565b60405180910390f35b34801561010057600080fd5b506101096103fb565b604051610116919061083f565b60405180910390f35b34801561012b57600080fd5b50610134610421565b6040516101419190610869565b60405180910390f35b610152610447565b005b34801561016057600080fd5b5061017b600480360381019061017691906108b0565b610569565b6040516101889190610869565b60405180910390f35b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610960565b60405180910390fd5b60005b6001805490508110156102d35760006001828154811061024d5761024c610980565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102cb906109de565b91505061022a565b50600067ffffffffffffffff8111156102ef576102ee610a26565b5b60405190808252806020026020018201604052801561031d5781602001602082028036833780820191505090505b5060019080519060200190610333929190610675565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161035a90610a86565b60006040518083038185875af1925050503d8060008114610397576040519150601f19603f3d011682016040523d82523d6000602084013e61039c565b606091505b50509050806103e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d790610ae7565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005461047f600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105a890919063ffffffff16565b10156104c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b790610b53565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6001818154811061057957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105b4836105e4565b90506000670de0b6b3a764000085836105cd9190610b73565b6105d79190610be4565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610632573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106569190610ca2565b5050509150506402540be4008161066d9190610d1d565b915050919050565b8280548282559060005260206000209081019282156106ee579160200282015b828111156106ed5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610695565b5b5090506106fb91906106ff565b5090565b5b80821115610718576000816000905550600101610700565b5090565b6000819050919050565b61072f8161071c565b82525050565b600060208201905061074a6000830184610726565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078082610755565b9050919050565b61079081610775565b811461079b57600080fd5b50565b6000813590506107ad81610787565b92915050565b6000602082840312156107c9576107c8610750565b5b60006107d78482850161079e565b91505092915050565b6000819050919050565b60006108056108006107fb84610755565b6107e0565b610755565b9050919050565b6000610817826107ea565b9050919050565b60006108298261080c565b9050919050565b6108398161081e565b82525050565b60006020820190506108546000830184610830565b92915050565b61086381610775565b82525050565b600060208201905061087e600083018461085a565b92915050565b61088d8161071c565b811461089857600080fd5b50565b6000813590506108aa81610884565b92915050565b6000602082840312156108c6576108c5610750565b5b60006108d48482850161089b565b91505092915050565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e20776974686472617720746865206d6f6e6560008201527f7921000000000000000000000000000000000000000000000000000000000000602082015250565b600061094a6022836108dd565b9150610955826108ee565b604082019050919050565b600060208201905081810360008301526109798161093d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109e98261071c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a1b57610a1a6109af565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a70600083610a55565b9150610a7b82610a60565b600082019050919050565b6000610a9182610a63565b9150819050919050565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610ad1600b836108dd565b9150610adc82610a9b565b602082019050919050565b60006020820190508181036000830152610b0081610ac4565b9050919050565b7f706c6561736520706179206d6f7265207468616e203120657468000000000000600082015250565b6000610b3d601a836108dd565b9150610b4882610b07565b602082019050919050565b60006020820190508181036000830152610b6c81610b30565b9050919050565b6000610b7e8261071c565b9150610b898361071c565b9250828202610b978161071c565b91508282048414831517610bae57610bad6109af565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bef8261071c565b9150610bfa8361071c565b925082610c0a57610c09610bb5565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3481610c15565b8114610c3f57600080fd5b50565b600081519050610c5181610c2b565b92915050565b6000819050919050565b610c6a81610c57565b8114610c7557600080fd5b50565b600081519050610c8781610c61565b92915050565b600081519050610c9c81610884565b92915050565b600080600080600060a08688031215610cbe57610cbd610750565b5b6000610ccc88828901610c42565b9550506020610cdd88828901610c78565b9450506040610cee88828901610c8d565b9350506060610cff88828901610c8d565b9250506080610d1088828901610c42565b9150509295509295909350565b6000610d2882610c57565b9150610d3383610c57565b9250828202610d4181610c57565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d7957610d786109af565b5b8282058414831517610d8e57610d8d6109af565b5b509291505056fea264697066735822122008841eccaab0f13179e2cc4cd4ba386a431fce1c563d429701a9ee41005347e064736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 56,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "minimumUSD",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 59,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 65,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 68,
        "contract": "contracts/Fundme.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}